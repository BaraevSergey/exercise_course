1. Создайте функцию, которая складывает массив чисел.
function summa (array) {
  let result=0
  for (const num of array) {
    result+=num
  }
  return result
}

let my_array=[1,2,3,4,6]
console.log(summa(my_array))

2. Что такое передача по ссылке и по значению? В чем разница между ними? Приведите пример.

Передача по ссылке - передаётся адрес памяти, и изменение значения в функции меняет исходную переменную
Передача по значению - передаётся значение, изменение значения в функции не меняет исходную переменную
По ссылке естественно лучше, так как память не дублируется, и по значению надо использовать только в некоторых случаях

3. Создайте любую функцию, которая использовала бы в качестве аргумента другую функцию (callback)

function summa (array,callback) {
  let result=0
  for (const num of array) {
    result+=num
  }
  callback()
  return result
}

let my_array=[1,2,3,4,6]
console.log(summa (
  my_array, script => {
    console.log('ready')
  }
) 
)

4. Создайте любой промис использую setTimeout для задержки ответа. Обработайте его использую then/catch и async/await (используя try/catch). Почему если вызвать промис синхронно и оберунть в try/catch, то в случае ошибки catch блок не поймает ошибку?

let promise = new Promise((resolve, reject) => {
  setTimeout(() => {
    resolve("result");
  }, 1000);

});

promise
    .then(() => {
        console.log("Успешно!");
    })
    .catch(() => {
        console.log("Неуспешно!");
    });

"5*. Задача: Дан массив целых чисел и и целочиселнное целевое значение, верните масив двух индексов на которых сумма величин элементов равна целевому значению. Вы можете предположить что решение только одно и все элементы исходного массива уникальны. Если можете покрыть свое решение тестами.
Пример: 
Вход: nums = [2,7,11,15], target = 9
Выход: [0,1]
Пояснение:  nums[0] + nums[1] == 9 --> [0, 1]."



У меня было мало времени поэтому только так 
function find_index(array, sum){
  let array_result = []
  for (let ind1=0; ind1 < array.length; ind1++ ) {
    for (let  ind2=0; ind2 < array.length; ind2++ ){
      if (array[ind1]+array[ind2] === 9) {
        array_result.push(ind1)
        array_result.push(ind2)
        return array_result
      }
    }
  }
  return array_result 
}

let array = [1,3,4,5,6,-2]
console.log(find_index(array,9))